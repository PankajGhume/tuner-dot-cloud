{"version":3,"sources":["webpack:///vendor.253ddf.js","webpack:///../~/wolfy87-eventemitter/EventEmitter.js","webpack:///../~/d3/d3.js"],"names":["webpackJsonp",0,"module","exports","__webpack_require__",15,"__WEBPACK_AMD_DEFINE_RESULT__","EventEmitter","indexOfListener","listeners","listener","i","length","alias","name","this","apply","arguments","proto","prototype","originalGlobalValue","getListeners","evt","response","key","events","_getEvents","RegExp","hasOwnProperty","test","flattenListeners","flatListeners","push","getListenersAsObject","Array","addListener","listenerIsWrapped","once","on","addOnceListener","defineEvent","defineEvents","evts","removeListener","index","splice","off","addListeners","manipulateListeners","removeListeners","remove","value","single","multiple","call","removeEvent","type","_events","removeAllListeners","emitEvent","args","listenersMap","slice","_getOnceReturnValue","trigger","emit","setOnceReturnValue","_onceReturnValue","noConflict","undefined",48,"__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","Object","defineProperty","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","object","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listenerByName","get","indexOf","concat","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML"],"mappings":"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","file":"vendor.253ddf.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(15);\n\tmodule.exports = __webpack_require__(48);\n\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * EventEmitter v4.2.11 - git.io/ee\n\t * Unlicense - http://unlicense.org/\n\t * Oliver Caldwell - http://oli.me.uk/\n\t * @preserve\n\t */\n\t\n\t;(function () {\n\t    'use strict';\n\t\n\t    /**\n\t     * Class for managing events.\n\t     * Can be extended to provide event functionality in other classes.\n\t     *\n\t     * @class EventEmitter Manages event registering and emitting.\n\t     */\n\t    function EventEmitter() {}\n\t\n\t    // Shortcuts to improve speed and size\n\t    var proto = EventEmitter.prototype;\n\t    var exports = this;\n\t    var originalGlobalValue = exports.EventEmitter;\n\t\n\t    /**\n\t     * Finds the index of the listener for the event in its storage array.\n\t     *\n\t     * @param {Function[]} listeners Array of listeners to search through.\n\t     * @param {Function} listener Method to look for.\n\t     * @return {Number} Index of the specified listener, -1 if not found\n\t     * @api private\n\t     */\n\t    function indexOfListener(listeners, listener) {\n\t        var i = listeners.length;\n\t        while (i--) {\n\t            if (listeners[i].listener === listener) {\n\t                return i;\n\t            }\n\t        }\n\t\n\t        return -1;\n\t    }\n\t\n\t    /**\n\t     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n\t     *\n\t     * @param {String} name The name of the target method.\n\t     * @return {Function} The aliased method\n\t     * @api private\n\t     */\n\t    function alias(name) {\n\t        return function aliasClosure() {\n\t            return this[name].apply(this, arguments);\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Returns the listener array for the specified event.\n\t     * Will initialise the event object and listener arrays if required.\n\t     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n\t     * Each property in the object response is an array of listener functions.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to return the listeners from.\n\t     * @return {Function[]|Object} All listener functions for the event.\n\t     */\n\t    proto.getListeners = function getListeners(evt) {\n\t        var events = this._getEvents();\n\t        var response;\n\t        var key;\n\t\n\t        // Return a concatenated array of all matching events if\n\t        // the selector is a regular expression.\n\t        if (evt instanceof RegExp) {\n\t            response = {};\n\t            for (key in events) {\n\t                if (events.hasOwnProperty(key) && evt.test(key)) {\n\t                    response[key] = events[key];\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            response = events[evt] || (events[evt] = []);\n\t        }\n\t\n\t        return response;\n\t    };\n\t\n\t    /**\n\t     * Takes a list of listener objects and flattens it into a list of listener functions.\n\t     *\n\t     * @param {Object[]} listeners Raw listener objects.\n\t     * @return {Function[]} Just the listener functions.\n\t     */\n\t    proto.flattenListeners = function flattenListeners(listeners) {\n\t        var flatListeners = [];\n\t        var i;\n\t\n\t        for (i = 0; i < listeners.length; i += 1) {\n\t            flatListeners.push(listeners[i].listener);\n\t        }\n\t\n\t        return flatListeners;\n\t    };\n\t\n\t    /**\n\t     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to return the listeners from.\n\t     * @return {Object} All listener functions for an event in an object.\n\t     */\n\t    proto.getListenersAsObject = function getListenersAsObject(evt) {\n\t        var listeners = this.getListeners(evt);\n\t        var response;\n\t\n\t        if (listeners instanceof Array) {\n\t            response = {};\n\t            response[evt] = listeners;\n\t        }\n\t\n\t        return response || listeners;\n\t    };\n\t\n\t    /**\n\t     * Adds a listener function to the specified event.\n\t     * The listener will not be added if it is a duplicate.\n\t     * If the listener returns true then it will be removed after it is called.\n\t     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to attach the listener to.\n\t     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.addListener = function addListener(evt, listener) {\n\t        var listeners = this.getListenersAsObject(evt);\n\t        var listenerIsWrapped = typeof listener === 'object';\n\t        var key;\n\t\n\t        for (key in listeners) {\n\t            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n\t                listeners[key].push(listenerIsWrapped ? listener : {\n\t                    listener: listener,\n\t                    once: false\n\t                });\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias of addListener\n\t     */\n\t    proto.on = alias('addListener');\n\t\n\t    /**\n\t     * Semi-alias of addListener. It will add a listener that will be\n\t     * automatically removed after its first execution.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to attach the listener to.\n\t     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.addOnceListener = function addOnceListener(evt, listener) {\n\t        return this.addListener(evt, {\n\t            listener: listener,\n\t            once: true\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Alias of addOnceListener.\n\t     */\n\t    proto.once = alias('addOnceListener');\n\t\n\t    /**\n\t     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n\t     * You need to tell it what event names should be matched by a regex.\n\t     *\n\t     * @param {String} evt Name of the event to create.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.defineEvent = function defineEvent(evt) {\n\t        this.getListeners(evt);\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Uses defineEvent to define multiple events.\n\t     *\n\t     * @param {String[]} evts An array of event names to define.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.defineEvents = function defineEvents(evts) {\n\t        for (var i = 0; i < evts.length; i += 1) {\n\t            this.defineEvent(evts[i]);\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Removes a listener function from the specified event.\n\t     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to remove the listener from.\n\t     * @param {Function} listener Method to remove from the event.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.removeListener = function removeListener(evt, listener) {\n\t        var listeners = this.getListenersAsObject(evt);\n\t        var index;\n\t        var key;\n\t\n\t        for (key in listeners) {\n\t            if (listeners.hasOwnProperty(key)) {\n\t                index = indexOfListener(listeners[key], listener);\n\t\n\t                if (index !== -1) {\n\t                    listeners[key].splice(index, 1);\n\t                }\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias of removeListener\n\t     */\n\t    proto.off = alias('removeListener');\n\t\n\t    /**\n\t     * Adds listeners in bulk using the manipulateListeners method.\n\t     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n\t     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n\t     * Yeah, this function does quite a bit. That's probably a bad thing.\n\t     *\n\t     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n\t     * @param {Function[]} [listeners] An optional array of listener functions to add.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.addListeners = function addListeners(evt, listeners) {\n\t        // Pass through to manipulateListeners\n\t        return this.manipulateListeners(false, evt, listeners);\n\t    };\n\t\n\t    /**\n\t     * Removes listeners in bulk using the manipulateListeners method.\n\t     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n\t     * You can also pass it an event name and an array of listeners to be removed.\n\t     * You can also pass it a regular expression to remove the listeners from all events that match it.\n\t     *\n\t     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n\t     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.removeListeners = function removeListeners(evt, listeners) {\n\t        // Pass through to manipulateListeners\n\t        return this.manipulateListeners(true, evt, listeners);\n\t    };\n\t\n\t    /**\n\t     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n\t     * The first argument will determine if the listeners are removed (true) or added (false).\n\t     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n\t     * You can also pass it an event name and an array of listeners to be added/removed.\n\t     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n\t     *\n\t     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n\t     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n\t     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n\t        var i;\n\t        var value;\n\t        var single = remove ? this.removeListener : this.addListener;\n\t        var multiple = remove ? this.removeListeners : this.addListeners;\n\t\n\t        // If evt is an object then pass each of its properties to this method\n\t        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n\t            for (i in evt) {\n\t                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n\t                    // Pass the single listener straight through to the singular method\n\t                    if (typeof value === 'function') {\n\t                        single.call(this, i, value);\n\t                    }\n\t                    else {\n\t                        // Otherwise pass back to the multiple function\n\t                        multiple.call(this, i, value);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            // So evt must be a string\n\t            // And listeners must be an array of listeners\n\t            // Loop over it and pass each one to the multiple method\n\t            i = listeners.length;\n\t            while (i--) {\n\t                single.call(this, evt, listeners[i]);\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Removes all listeners from a specified event.\n\t     * If you do not specify an event then all listeners will be removed.\n\t     * That means every event will be emptied.\n\t     * You can also pass a regex to remove all events that match it.\n\t     *\n\t     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.removeEvent = function removeEvent(evt) {\n\t        var type = typeof evt;\n\t        var events = this._getEvents();\n\t        var key;\n\t\n\t        // Remove different things depending on the state of evt\n\t        if (type === 'string') {\n\t            // Remove all listeners for the specified event\n\t            delete events[evt];\n\t        }\n\t        else if (evt instanceof RegExp) {\n\t            // Remove all events matching the regex.\n\t            for (key in events) {\n\t                if (events.hasOwnProperty(key) && evt.test(key)) {\n\t                    delete events[key];\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            // Remove all listeners in all events\n\t            delete this._events;\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias of removeEvent.\n\t     *\n\t     * Added to mirror the node API.\n\t     */\n\t    proto.removeAllListeners = alias('removeEvent');\n\t\n\t    /**\n\t     * Emits an event of your choice.\n\t     * When emitted, every listener attached to that event will be executed.\n\t     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n\t     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n\t     * So they will not arrive within the array on the other side, they will be separate.\n\t     * You can also pass a regular expression to emit to all events that match it.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n\t     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.emitEvent = function emitEvent(evt, args) {\n\t        var listenersMap = this.getListenersAsObject(evt);\n\t        var listeners;\n\t        var listener;\n\t        var i;\n\t        var key;\n\t        var response;\n\t\n\t        for (key in listenersMap) {\n\t            if (listenersMap.hasOwnProperty(key)) {\n\t                listeners = listenersMap[key].slice(0);\n\t                i = listeners.length;\n\t\n\t                while (i--) {\n\t                    // If the listener returns true then it shall be removed from the event\n\t                    // The function is executed either with a basic call or an apply if there is an args array\n\t                    listener = listeners[i];\n\t\n\t                    if (listener.once === true) {\n\t                        this.removeListener(evt, listener.listener);\n\t                    }\n\t\n\t                    response = listener.listener.apply(this, args || []);\n\t\n\t                    if (response === this._getOnceReturnValue()) {\n\t                        this.removeListener(evt, listener.listener);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Alias of emitEvent\n\t     */\n\t    proto.trigger = alias('emitEvent');\n\t\n\t    /**\n\t     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n\t     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n\t     *\n\t     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n\t     * @param {...*} Optional additional arguments to be passed to each listener.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.emit = function emit(evt) {\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        return this.emitEvent(evt, args);\n\t    };\n\t\n\t    /**\n\t     * Sets the current value to check against when executing listeners. If a\n\t     * listeners return value matches the one set here then it will be removed\n\t     * after execution. This value defaults to true.\n\t     *\n\t     * @param {*} value The new value to check for when executing listeners.\n\t     * @return {Object} Current instance of EventEmitter for chaining.\n\t     */\n\t    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n\t        this._onceReturnValue = value;\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Fetches the current value to check against when executing listeners. If\n\t     * the listeners return value matches this one then it should be removed\n\t     * automatically. It will return true by default.\n\t     *\n\t     * @return {*|Boolean} The current value to check for or the default, true.\n\t     * @api private\n\t     */\n\t    proto._getOnceReturnValue = function _getOnceReturnValue() {\n\t        if (this.hasOwnProperty('_onceReturnValue')) {\n\t            return this._onceReturnValue;\n\t        }\n\t        else {\n\t            return true;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Fetches the events object and creates one if required.\n\t     *\n\t     * @return {Object} The events storage object.\n\t     * @api private\n\t     */\n\t    proto._getEvents = function _getEvents() {\n\t        return this._events || (this._events = {});\n\t    };\n\t\n\t    /**\n\t     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n\t     *\n\t     * @return {Function} Non conflicting EventEmitter class.\n\t     */\n\t    EventEmitter.noConflict = function noConflict() {\n\t        exports.EventEmitter = originalGlobalValue;\n\t        return EventEmitter;\n\t    };\n\t\n\t    // Expose the class either via AMD, CommonJS or the global object\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return EventEmitter;\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\t    else if (typeof module === 'object' && module.exports){\n\t        module.exports = EventEmitter;\n\t    }\n\t    else {\n\t        exports.EventEmitter = EventEmitter;\n\t    }\n\t}.call(this));\n\n\n/***/ },\n\n/***/ 48:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** vendor.253ddf.js\n **/","/*!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n;(function () {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var exports = this;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n                i = listeners.length;\n\n                while (i--) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/wolfy87-eventemitter/EventEmitter.js\n ** module id = 15\n ** module chunks = 2\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/d3/d3.js\n ** module id = 48\n ** module chunks = 2\n **/"],"sourceRoot":""}